import React, { useRef } from 'react'
import {
  CCard,
  CCardBody,
  CCardHeader,
  CCol,
  CForm,
  CFormInput,
  CFormLabel,
  CRow,
  CButton,
} from '@coreui/react'
import { DocsComponents, DocsExample } from 'src/components'
import { Table } from 'flowbite-react'
import { generateClient } from 'aws-amplify/data'
import { useEffect } from 'react'
import { useState } from 'react'
import DataTable from 'react-data-table-component'
import * as XLSX from 'xlsx'
import styled from 'styled-components'
import { NavLink, useLocation, useParams } from 'react-router-dom'
const client = generateClient()
const DoctorDBS = () => {
  const [categories, setCategory] = useState([])
  const [filteredItems, setFilterItem] = useState([])
  const [visible, setVisible] = useState(false)
  const [file, setFile] = useState(null)
  const [loadingTable, setLoadingActive] = useState(true)
  const [filterText, setFilterText] = React.useState('')
  const [resetPaginationToggle, setResetPaginationToggle] = useState(false)
  const location = useLocation()
  const inputFile = useRef(null)
  const [showNumber, setNumber] = useState(false)
  const [totalRecord, setTotalRecord] = useState(0)
  const [savedRecord, setSavedReocrd] = useState(0)
  const [failedRecord, setFailedRecord] = useState(0)
  const [failedRecords, setFailedRecords] = useState(0)
  const [name, setName] = useState('')

  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const capitalizeFirstLetter = (val) => {
    return String(val).charAt(0).toUpperCase() + String(val).slice(1)
  }
  const fetchTodos = async () => {
    const { data: items, errors } = await client.models.Client.list({
      limit: 20000,
      filter: {
        category_id: {
          beginsWith: name,
        },
      },
    })

    // await client.models.Client.list({
    //   limit: 20000,
    // })
    setCategory(items)
    setFilterItem(items.sort((a, b) => a.name.localeCompare(b.name)))
    // await deleteAll(items)
    console.log(items.length, 'items.length')
    setLoadingActive(false)
  }

  const array = [
    'phone_number',
    '3464563217',
    '3072513741',
    '3244797236',
    '3024666068',
    '3347812117',
    '3074597032',
    '3004185786',
    '3348155675',
    '3066957529',
    '3204401081',
    '3234914830',
    '3439777177',
    '3244797410',
    '3077154209',
    '3318889732',
    '3488259597',
    '3130200316',
    '3074030083',
    '3365602234',
    '3404575818',
    '3043242439',
    '3453396657',
    '3494730881',
    '3334029653',
    '3177903370',
    '3412465275',
    '3078862752',
    '3130446713',
    '3224556459',
    '3244805461',
    '3206969063',
    '3116802681',
    '3354888158',
    '3074542406',
    '3152044048',
    '3324249308',
    '3052424438',
    '3066512967',
    '3314390665',
    '3324459242',
    '3364209134',
    '3366998314',
    '3051656438',
    '3447553296',
    '3226190210',
    '3488259597',
    '3130200316',
    '3074030083',
    '3365602234',
    '3404575818',
    '3043242439',
    '3453396657',
    '3494730881',
    '3334029653',
    '3177903370',
    '3412465275',
    '3078862752',
    '3130446713',
    '3224556459',
    '3244805461',
    '3206969063',
    '3116802681',
    '3354888158',
    '3074542406',
    '3152044048',
    '3324249308',
    '3052424438',
    '3066512967',
    '3314390665',
    '3324459242',
    '3364209134',
    '3366998314',
    '3051656438',
    '3447553296',
    '3226190210',
    '3057374981',
    '3044980383',
    '3464572462',
    '3041036911',
    '3065409986',
    '3364049959',
    '3361691988',
    '3316144729',
    '3493993766',
    '3068580661',
    '3065504577',
    '3414367031',
    '3156476694',
    '3044086717',
    '3242353131',
    '3045529851',
    '3207911024',
    '3025907232',
    '3128093162',
    '3074484455',
    '3488735731',
    '3024354164',
    '3204490476',
    '303917675',
    '3035382844',
    '3044348070',
    '3410440163',
    '3036999616',
    '3002098755',
    '3053163245',
    '3041498492',
    '3407260195',
    '3096559415',
    '3120170034',
    '3052641012',
    '3167589669',
    '3094706091',
    '3234634754',
    '3055612836',
    '3044380965',
    '3436777090',
    '3154608661',
    '3091496915',
    '3077288641',
    '3160486850',
    '3070115596',
    '3211763026',
    '3086566298',
    '3354597198',
    '3064190934',
    '3438362342',
    '3350217168',
    '3208471907',
    '3224195214',
    '3346949559',
    '3323028885',
    '3244543188',
    '3234719375',
    '3456134004',
    '3124955209',
    '3136418637',
    '3331237820',
    '3029024575',
    '3361409507',
    '3219487082',
    '3340421288',
    '3421755194',
    '3234700814',
    '3334959863',
    '3161464400',
    '3084593356',
    '3078896965',
    '3440482487',
    '3077073451',
    '3014403559',
    '3311044828',
    '3005291844',
    '3035549146',
    '3134753633',
    '3416274833',
    '3374932040',
    '3035070036',
    '3097001965',
    '3224258067',
    '3004927441',
    '3074289419',
    '3434799912',
    '3064746501',
    '3051684749',
    '3214740767',
    '3177854173',
    '3054196786',
    '3010119545',
    '3233165460',
    '3349910409',
    '3371443203',
    '3124966528',
    '3248448374',
    '3234248366',
    '3324575107',
    '3061469054',
    '3066439906',
    '3060040734',
    '3487552573',
    '3364659410',
    '3014531444',
    '3054730872',
    '3234106124',
    '3074045504',
    '3441563355',
    '3008015631',
    '3004990366',
    '3004275499',
    '3064334375',
    '3411211169',
    '3099415038',
    '3332847568',
    '3064238697',
    '3104189471',
    '3124955209',
    '3044060449',
    '3044136368',
    '3023435968',
    '3474153568',
    '3078249469',
    '3095472844',
    '3317199690',
    '3036223042',
    '3214902735',
    '3039623707',
    '3068526998',
    '3079238317',
    '3097748164',
    '3354662293',
    '3354662293',
    '3009683143',
    '3152561727',
    '3039624164',
    '3004044697',
    '3204323690',
    '3044494661',
    '3244893756',
    '3085180025',
    '3030232764',
    '3035063124',
    '3421083691',
    '3004614457',
    '3067299556',
    '3354598675',
    '3094487243',
    '3346637521',
    '3004819458',
    '3435599245',
    '3014668847',
    '3224952803',
    '3024462019',
    '3364655756',
    '3334056729',
    '3339388883',
    '3068721507',
    '3064575646',
    '3060598420',
    '3244466683',
    '3224733914',
    '3354434686',
    '3214339335',
    '3324814866',
    '3334707800',
    '3038219198',
    '3247272418',
    '3004485903',
    '3364253195',
    '3354412531',
    '3218383764',
    '3246562367',
    '3029027179',
    '3224622052',
    '3209426768',
    '3217743102',
    '3354401195',
    '3004699103',
    '3070595939',
    '3356965200',
    '3046632276',
    '321101480',
    '3062648926',
    '3228936778',
    '3234746925',
    '3024125903',
    '3054321782',
    '322499460',
    '3244743989',
    '3326589934',
    '3096750390',
    '3447628493',
    '3051871713',
    '3027181962',
    '3084437327',
    '3143402022',
    '3063300518',
    '3027225293',
    '3481290051',
    '3028119758',
    '3491776649',
    '3068346504',
    '3045321744',
    '3094839465',
    '3036349278',
    '3019231798',
    '3057274854',
    '3326913953',
    '3331594034',
    '3014953663',
    '3444197294',
    '3017024119',
    '314431686',
    '3320754830',
    '3234935754',
    '3367308729',
    '3238857327',
    '3000423696',
    '3361400827',
    '3009489632',
    '3046473694',
    '3096735697',
    '3076615807',
    '3084081138',
    '3064533070',
    '3244623803',
    '3004357992',
    '3344336166',
    '3234178871',
    '3004348034',
    '3084414711',
    '3334272776',
    '3214853418',
    '3029402031',
    '3226062984',
    '3374815647',
    '3244033187',
    '3324375396',
    '3064763709',
    '3144051624',
    '3077016820',
    '3224222892',
    '3161455589',
    '3224325978',
    '3139685233',
    '3453415298',
    '3089213047',
    '3176905302',
    '3034479210',
    '3115042828',
    '3219865518',
    '3432632198',
    '3074547616',
    '3094946894',
    '3074020580',
    '3051657020',
    '3024535394',
    '3039811015',
    '3024073779',
    '3414425043',
    '3406090675',
    '3334762053',
    '3495771435',
    '3452737043',
    '3430434661',
    '3304639108',
    '3447553296',
    '3428106278',
    '3000820644',
    '3344983379',
    '3404422748',
    '3244019444',
    '3035741268',
    '3054394102',
    '3495701735',
    '3235098816',
    '3214922858',
    '3023576086',
    '3314707982',
    '3219349450',
    '3354004603',
    '3134929413',
    '3244989585',
    '3074301062',
    '3084860572',
    '3014266673',
    '3234719241',
    '3214730518',
    '3095802822',
    '3231426363',
    '3005321077',
    '3040217915',
    '3154162199',
    '3214211777',
    '3400146934',
    '3006191224',
    '3124474252',
    '3024614463',
    '3006806872',
    '3211681241',
    '3478745468',
    '3007924213',
    '3454479192',
    '3008018330',
    '3442906877',
    '3214142032',
    '3222775576',
    '3033610064',
    '3094810307',
    '3239610364',
    '3041862982',
    '3036966840',
    '3249475754',
    '3060012043',
    '3334468839',
    '3324197385',
    '3244536273',
    '3004633715',
    '3244838442',
    '3243806847',
    '3099565321',
    '3044419102',
    '3216038591',
    '3085961050',
    '3334398311',
    '3029053039',
    '3089643143',
    '3094356151',
    '3014658852',
    '3201416620',
    '3084208256',
    '3227604149',
    '3344197700',
    '3084611810',
    '3008090145',
    '3215631656',
    '3244567774',
    '3334235328',
    '3004909955',
    '3215968221',
    '3364216850',
    '3334073972',
    '03110414450',
    '3064445017',
    '304781517',
    '3216808210',
    '3070043691',
    '3034122144',
    '3084376913',
    '3224673590',
    '3244913487',
    '3067990915',
    '3124822145',
    '3164359489',
    '3311337055',
    '3217502501',
    '3324748838',
    '3204636188',
    '3434969968',
    '3314302339',
    '3004946089',
    '3364519470',
    '3484570711',
    '3234715580',
    '3062648926',
    '3454130207',
    '3204407861',
    '3223800764',
    '3247272418',
    '3086020557',
    '3361080599',
    '3324332245',
    '3334872631',
    '3114559882',
    '3234894428',
    '3364178805',
    '3009405853',
    '3244921105',
    '3314924822',
    '3334282410',
    '3154349024',
    '3104994176',
    '3034014667',
    '3217449442',
    '3094365969',
    '3340145414',
    '3324814866',
    '3024768579',
    '3314084431',
    '3327296012',
    '3346266331',
    '3427371348',
    '3044221622',
    '3239947768',
    '3359437808',
    '3066470781',
    '3015393336',
    '3464616524',
    '3036318764',
    '3094129469',
    '3044081401',
    '3036306746',
    '3017189768',
    '3074545142',
    '3064099706',
    '3484924348',
    '3036593882',
    '3067363594',
    '3451358116',
    '3482089173',
    '3428554920',
    '3114513806',
    '3024076272',
    '3010945574',
    '3437908154',
    '3002006414',
    '3013481625',
    '3066274804',
    '3070480869',
    '3049671303',
    '3408813797',
    '3034064844',
    '3339917036',
    '3134808043',
    '3096106657',
    '3234894710',
    '3045799755',
    '30385746628',
    '3404440304',
    '3104749794',
    '3029669310',
    '3234375619',
    '3472815684',
    '3084172607',
    '3030161712',
    '3236948983',
    '3314050614',
    '3214729523',
    '3313669524',
    '3066780700',
    '3411332913',
    '3037211781',
    '3008837749',
    '3336779637',
    '3016210291',
    '3209459818',
    '3080606035',
    '3082432215',
    '3204310287',
    '3161488142',
    '3054113692',
    '3114745888',
    '3008438615',
    '3054451743',
    '3234948972',
    '3002727629',
    '3454659070',
    '3437749651',
    '3002170564',
    '3480493398',
    '3497553350',
    '3365415090',
    '3098025419',
    '3423233012',
    '3374257665',
    '3134799877',
    '3090850575',
    '3056103383',
    '3472968135',
    '3027530673',
    '3025079784',
    '3084764251',
    '3075102370',
    '3177131078',
    '3495283553',
    '3047381717',
    '3331042240',
    '3074494306',
    '3078137941',
    '3027690697',
    '3091857005',
    '3224341942',
    '3096022698',
    '3064292766',
    '3433533356',
    '3249442550',
    '3026884659',
    '3455007415',
    '3042191679',
    '3337097197',
    '3315613934',
    '3008801813',
    '3014368655',
    '3481276947',
    '3117446278',
    '3467626514',
    '3028119758',
    '3055608419',
    '3075717697',
    '3211166207',
    '3177306655',
    '3360010048',
    '3026937806',
    '3413836520',
    '3205929010',
    '3024249107',
    '3042980900',
    '3041268884',
    '3036999616',
    '3086566298',
    '3417961268',
    '3445710594',
    '3241489297',
    '3039519838',
    '3474805760',
    '3164274245',
    '3442672799',
    '3094105010',
    '3034101489',
    '3311478414',
    '3314512924',
    '3436744600',
    '3004900499',
    '3187610516',
    '3040014954',
    '3025600759',
    '3334809431',
    '3074924708',
    '3458785424',
    '3127572500',
    '3134268410',
    '3316689488',
    '3004506121',
    '3314493203',
    '3029401880',
    '3014452247',
    '3094159096',
    '3000382371',
    '3229480798',
    '3244362234',
    '3475268841',
    '3134667565',
    '3145764308',
    '3010407163',
    '3494808110',
    '3084670849',
    '3004865665',
    '3055491015',
    '3416994863',
    '3454685772',
    '3068796039',
    '3054141386',
    '3064301670',
    '3097790748',
    '3081201638',
    '3234521450',
    '3008438615',
    '3094850219',
    '3246332608',
    '3217925750',
    '3334419188',
    '3364488979',
    '3004331841',
    '3486600774',
    '3314541551',
    '3084660594',
    '3084037357',
    '3084433340',
    '3009486653',
    '3004795748',
    '3236550549',
    '3324036438',
    '3034312827',
    '3017980970',
    '3441659265',
    '3218393784',
    '3046402281',
    '3222224310',
    '3034228282',
    '3044186383',
    '3176713286',
    '3204641607',
    '3066894520',
    '3039124310',
    '3098284482',
    '3014299374',
    '3054092648',
    '3093322225',
    '3044201624',
    '3214238702',
    '3041862982',
    '3239610364',
    '3494120304',
    '3480461031',
    '3035945852',
    '3480770215',
    '3464120650',
    '3224421540',
    '3314314033',
    '3224950877',
    '3060040734',
    '3034825672',
    '3101453811',
    '3127342052',
    '3224123674',
    '3174023299',
    '3311420994',
    '3244007971',
    '3044244845',
    '3049923893',
    '3416748595',
    '3045093419',
    '3320488599',
    '3094491877',
    '3437908154',
    '3007434755',
    '3044836069',
    '3326913953',
    '3082663793',
    '3024309031',
    '3114217364',
    '3484545838',
    '3007990444',
    '3460973157',
    '3004644434',
    '347428997',
    '3231433090',
    '3054879406',
    '3090907570',
    '3208409388',
    '3354228317',
    '3093986861',
    '3420324921',
    '3334873327',
    '3134725590',
    '3055157143',
    '3073326886',
    '3091474123',
    '3034679874',
    '3331473532',
    '3204634716',
    '309012109',
    '3024622379',
    '3331382224',
    '3456812350',
    '3097748164',
    '3203068699',
    '3249426137',
    '3024602032',
    '3088567164',
    '3022903716',
    '3177306655',
    '3248464527',
    '3023379319',
    '3344611233',
    '3310147616',
    '3078009012',
    '3157172662',
    '3030488062',
    '3073384776',
    '3044608611',
    '3337255899',
    '3360010048',
    '3024249107',
    '3211763026',
    '3449410102',
    '3230119051',
    '3164328056',
    '3096055989',
    '3170425208',
    '3084359909',
    '3434871401',
    '3334385128',
    '346082664',
    '3414266506',
    '3494218312',
    '3314797568',
    '3204025229',
    '3404232846',
    '3086566298',
    '3084129561',
    '3070157246',
    '3029669310',
    '3104749794',
    '3417961268',
    '',
    '3074584929',
    '3014338142',
    '3328482937',
    '3144256365',
    '3444417640',
    '3029053039',
    '3096564023',
    '3025685184',
    '3244008626',
    '3230421772',
    '3088501264',
    '3034304485',
    '3444618296',
    '3025079784',
    '3236851674',
    '3054176803',
    '3036804579',
    '3035805977',
    '3476300452',
    '3334007649',
    '3057152212',
    '3076925032',
    '3454280040',
    '3034334644',
    '3351606674',
    '3000110666',
    '3028124944',
    '3027530673',
    '3094398472',
    '3124352942',
    '3065055110',
    '3066401739',
    '3030849469',
    '3085271972',
    '3229896150',
    '3056499592',
    '3086590352',
    '3024413157',
    '3401429510',
    '3045782924',
    '3124345858',
    '3070100528',
    '3075878494',
    '3088501264',
    '3013560692',
    '3482052944',
    '3028093158',
    '3052610206',
    '3044991943',
    '3463715027',
    '3087826762',
    '3004151313',
    '3402391887',
    '3004818643',
    '3056297654',
    '3034304485',
    '3444618396',
    '3025079784',
    '3236851674',
    '3054176803',
    '3036804579',
    '3035805977',
    '3038864091',
    '3024108724',
    '3347020805',
    '3335075549',
    '3332309375',
    '3347646377',
    '3023320606',
    '3325597465',
    '3318628688',
    '3355005460',
    '3472346590',
    '349606624',
    '3336957690',
    '3351885053',
    '3454978757',
    '3094855475',
    '3177665908',
    '3179610848',
    '3008176457',
    '3034954040',
    '3030418782',
    '3467294627',
    '3078607686',
    '3456730059',
    '3469106027',
    '3091688168',
    '3212880376',
    '3000952677',
    '3009613930',
    '3344468748',
    '3065714359',
    '3330738656',
    '3446091831',
    '3327460948',
    '3336744777',
    '3088404367',
    '3013257527',
    '3059350719',
    '3045762601',
    '3006943614',
    '3007372216',
    '3337059464',
    '3012755449',
    '3088202374',
    '3418624989',
    '3033636141',
    '3344163331',
    '3019118586',
    '3002143342',
    '3007518195',
    '3072137239',
    '3030742868',
    '3336030869',
    '3458374454',
    '3067878684',
    '3082518603',
    '3470347085',
    '3013621135',
    '3316403990',
    '3024022699',
    '3320215382',
    '3085511559',
    '3088656365',
    '3356424552',
    '3066959699',
    '3017878115',
    '3330458772',
    '3322924482',
    '3017813742',
    '3094976801',
    '3126141333',
    '3454308819',
    '3027344167',
    '3204412288',
    '3084459072',
    '3058401225',
    '3069800983',
    '3076761273',
    '3423547465',
    '3036707789',
    '3036907106',
    '3362202526',
    '3462281841',
    '3313483541',
    '3013817747',
    '3138673025',
    '3326434663',
    '3447151132',
    '3098173172',
    '3406815914',
    '3056917549',
    '3006019498',
    '3014184565',
    '3041533105',
    '3060798033',
    '3336219325',
    '3003761200',
    '3089205445',
    '3376072290',
    '3366525468',
    '3367835858',
    '3143123209',
    '3334892828',
    '3356394721',
    '3317816102',
    '3335536371',
    '3354245421',
    '3030404588',
    '3054128718',
    '3346208042',
    '3486536942',
    '3035327719',
    '3007535460',
    '3089185046',
    '3346478632',
    '3167750622',
    '3076305498',
    '3321413462',
    '3207962621',
    '3024424042',
    '3468267738',
    '3460550484',
    '3064692628',
    '3465524996',
    '3096539690',
    '3085096040',
    '3002423658',
    '3080019753',
    '301226423',
    '3044163322',
    '3058109743',
    '3065033596',
    '3152030082',
    '3054808474',
    '3327073329',
    '3367069128',
    '3158569554',
    '3164315552',
    '3484752406',
    '3249471916',
    '3017332447',
    '3468654901',
    '3433381122',
    '3357729544',
    '3054222541',
    '3412276273',
    '3350893622',
    '3005413805',
    '3135200256',
    '3060432262',
    '3027961487',
    '3002878840',
    '3056551626',
    '3038779856',
    '3438773525',
    '3004675653',
    '3442390077',
    '3499450260',
    '3226466280',
    '3083563892',
    '3064898489',
    '3300600092',
    '3244225302',
    '3236152859',
    '3371468566',
    '3211415063',
    '3457045754',
    '3442054382',
    '3217750288',
    '3497444144',
    '3404720532',
    '3057248366',
    '3436606172',
    '3344696444',
    '3364479321',
    '3085637658',
    '3404976190',
    '3424559644',
    '3078282896',
    '3236233886',
    '3077137717',
    '3024150581',
    '3344829197',
    '3316610101',
    '3364647108',
    '3006425356',
    '3082660870',
    '3024000375',
    '3009566155',
    '3224854195',
    '3133424255',
    '3012189821',
    '3157118340',
    '3406644474',
    '3057745045',
    '33283205971',
    '3436373197',
    '3458387625',
    '3104573738',
    '3334330882',
    '3026254915',
    '3337097197',
    '3015567072',
    '3015567072',
    '3074800822',
    '3315613934',
    '3117446278',
    '3467626514',
    '3030694533',
    '3042097721',
    '3002796363',
    '3042704676',
    '3009463137',
    '3249790752',
    '3022893805',
    '3245124792',
    '3446637863',
    '3014368655',
    '3447628493',
    '3450211935',
    '3490433412',
    '3421641267',
    '3425694274',
    '3114901300',
    '3059431846',
    '3215296816',
    '3006612848',
    '3404609530',
    '3400488050',
    '3081488050',
    '3249680250',
    '3317996656',
    '3374802606',
    '3434858143',
    '3016185388',
    '3446498192',
    '3006075088',
    '3017670941',
    '3081501937',
    '3481016400',
    '3325602442',
    '3360700876',
    '3407446915',
    '3349502186',
    '3007010076',
    '3087964472',
    '3430077525',
    '3460773881',
    '3326394051',
    '3440047043',
    '3217213854',
    '3014016349',
    '3085539216',
    '3015743572',
    '3024091623',
    '3134361009',
    '3070498815',
    '3224841931',
    '3010426324',
    '3338754335',
    '3051076188',
    '3174918779',
    '3344186634',
    '3234214955',
    '3224140450',
    '3214656504',
    '3049585253',
    '3454776679',
    '3114795159',
    '3352333204',
    '3324929591',
    '3238814133',
    '3044316475',
    '3453268745',
    '3014296170',
    '3000417400',
    '3155162928',
    '3044667757',
    '3039555685',
    '3214246645',
    '3204314385',
    '3324612881',
    '3234901226',
    '3150443284',
    '3008944669',
    '3016322268',
    '3041382324',
    '3022973008',
    '3065556888',
    '3231484733',
    '3008851801',
    '3238472714',
    '3356267452',
    '3006762136',
    '3227880284',
    '3404901210',
    '3040040763',
    '3041431745',
    '3324537272',
    '3344227492',
    '3065467440',
    '3004807273',
    '3474237090',
    '3234083954',
    '3216575861',
    '3034808951',
    '3076587448',
    '3324037843',
    '3214550809',
    '3214503968',
    '3364158327',
    '3174353969',
    '3344207539',
    '3114750174',
    '3036615660',
    '3316319852',
    '3114252244',
    '3034052891',
    '3038943630',
    '3461337363',
    '3012125556',
    '3361080599',
    '3011670027',
    '3224350732',
    '3059668481',
    '3344378479',
    '3054853190',
    '3068078850',
    '3029648296',
    '3029313662',
    '3000301100',
    '3227845856',
    '3434675167',
    '3347754099',
    '3327085516',
    '3460244896',
    '3224304810',
    '3211041480',
    '3334472071',
    '3064766491',
    '3234031150',
    '3237004812',
    '3468959039',
    '3084027960',
    '3334500718',
    '3224336055',
    '3099445248',
    '3134663123',
    '3054637174',
    '3074653816',
    '3004684077',
    '3214574816',
    '3077526950',
    '3326589934',
    '3314244599',
    '3314071425',
    '3074595084',
    '3008083105',
    '',
    '',
    '3154147731',
    '"03218868907',
    '03004348062"',
    '3214352959',
    '3310478306',
    '3450407811',
    '3494621989',
    '3202787034',
    '',
    '3338132205',
    '3332915489',
    '3069632648',
    '3085358099',
    '3070417781',
    '3044245707',
    '3087886959',
    '3464494933',
    '3114440455',
    '3081627583',
    '3224127977',
    '3316134322',
    '3095472844',
    '3009683143',
    '3234894710',
    '3004653262',
    '3496180537',
    '3217923446',
    '3004936895',
    '3487353039',
    '3160754014',
    '3442621271',
    '3454664660',
    '3063842801',
    '3075473346',
    '3053157592',
    '3432615906',
    '3014759237',
    '3427259933',
    '3022951332',
    '3074339775',
    '3097832316',
    '324805907',
    '3314775075',
    '3004841938',
    '3347154014',
    '3314729523',
    '3434513592',
    '3244348151',
    '3214113951',
    '3015152923',
    '3084833934',
    '3449182904',
    '3338173507',
    '3456710958',
    '3314750860',
    '3064579345',
    '3074387285',
    '3244717994',
    '3244717994',
    '3224127977',
    '3116284524',
    '3087755198',
    '3234842107',
    '3320509786',
    '3154147731',
    '3218868807',
    '3338248052',
    '3314002942',
    '3244942148',
    '3350140890',
    '3238829712',
    '3070066143',
    '3154169515',
    '3059377024',
    '3244394465',
    '3474065339',
    '3084041373',
    '3008933826',
    '3116328207',
    '3004669215',
    '3004742912',
    '3008035315',
    '3074246995',
    '3219877631',
    '3000326082',
    '3228056071',
    '3077329508',
    '3354929642',
    '3400243476',
    '3237526425',
    '3004145603',
    '3354595241',
    '3004303904',
    '3064400785',
    '3360197723',
    '3215536698',
    '3082051188',
    '3054177060',
    '3334452678',
    '3014833238',
    '3309197070',
    '3314444959',
    '3074370058',
    '3074914391',
    '3318433275',
    '3084621347',
    '3084621347',
    '3064267702',
    '3228451084',
    '3224910849',
    '3014643682',
    '3470600682',
    '3310435422',
    '3014452247',
    '3488780451',
    '3364864277',
    '3017755043',
    '3054496368',
    '3004202028',
    '3334781590',
    '3444134659',
    '3072500066',
    '3214539625',
    '3204884356',
    '3484595552',
    '3244345594',
    '3051493356',
    '3227570010',
    '3493964914',
    '3212794369',
    '302437295',
    '3002664614',
    '3024706576',
    '3441369229',
    '3316842959',
    '315637176',
    '3034117696',
    '3064194133',
    '3035004263',
    '3434054814',
    '3049306406',
    '3079302149',
    '3080332016',
    '33246262965',
    '3429894739',
    '3452255330',
    '3074225432',
    '3227570019',
    '3030076147',
    '3010043969',
    '3464534872',
    '3204587666',
    '3077559610',
    '3414274472',
    '3334844655',
    '3084942639',
    '3356101100',
    '3477144218',
    '3426309802',
    '3347981626',
    '3333772785',
    '3122907081',
    '3075736554',
    '3084544972',
    '3049699766',
    '3238950009',
    '3426309802',
    '3429849491',
    '3401571013',
    '3160486850',
    '3434253024',
    '3347981626',
    '3228464533',
    '3094683037',
    '3434253024',
    '3477144218',
    '3054695910',
    '3024836486',
    '3324965737',
    '3024777404',
    '3056136351',
    '3045707834',
    '3314797568',
    '3338732048',
    '3024674880',
    '3055826484',
    '3487547158',
    '3464865417',
    '3204828838',
    '3227304316',
    '3331610464',
    '3040961295',
    '3412456923',
    '3436875070',
    '3029212251',
    '3064780411',
    '3093685314',
    '3096336736',
    '3333772785',
    '3060655668',
    '3328488896',
    '3224528364',
    '3144102901',
    '3014087811',
    '3205494690',
    '3333818740',
    '3158569554',
    '3478397170',
    '3070361148',
    '3070441072',
    '3054434679',
    '3432850114',
    '3434170893',
    '3444064602',
    '3029767742',
    '3002113506',
    '3039054370',
    '3047498140',
    '3043583470',
    '3497013372',
    '3096639530',
    '3076573599',
    '3320146022',
    '3044047188',
    '3124746701',
    '3101461870',
    '3234803461',
    '3224762024',
    '3214216472',
    '3245069546',
    '3002920783',
    '3029366061',
    '3155162928',
    '3204639969',
    '3004657589',
    '3073384776',
    '3227877306',
    '3027266131',
    '3359695444',
    '3122907081',
    '3151429989',
    '3024165908',
    '3044862721',
    '3147558066',
    '3173886594',
    '3004831692',
    '3075137083',
    '3124927924',
    '3406192950',
    '3014281749',
    '3084942639',
    '3349739124',
    '3076707919',
    '3464831815',
    '3334844655',
    '3344206217',
    '3036249438',
    '3095144772',
    '3314760927',
    '3074724966',
    '3235516768',
    '3463536021',
    '3078151104',
    '3486710990',
    '3417904367',
    '3088629230',
    '3012877876',
    '3129746597',
    '3246006602',
    '3107921485',
    '3096102702',
    '3075930602',
    '3135044324',
    '3454894091',
    '3069030908',
    '3357746930',
    '3084771266',
    '3024112166',
    '3234396176',
    '3030409198',
    '3434991394',
    '3144961974',
    '3234901226',
    '3204589727',
    '3324037843',
    '3174881607',
    '3036103749',
    '3344829197',
    '3238491898',
    '3024625303',
    '3085410391',
    '3084111775',
    '3064783536',
    '3084630675',
    '3002779955',
    '3030499226',
    '3444170860',
    '3427594478',
    '3011336002',
    '3110459337',
    '3024871167',
    '3028084128',
    '3054055107',
    '3064107332',
    '3414140097',
    '3486630911',
    '3093686183',
    '3172096597',
    '3430300962',
    '3070454359',
    '3356101100',
    '3314240788',
    '3095424105',
    '3024050929',
    '3084425496',
    '3351407826',
    '3184263512',
    '3064167286',
    '3206574330',
    '3334068119',
    '3064609847',
    '3224669379',
    '3024622379',
    '3082774831',
    '3329465740',
    '3350407015',
    '3160480004',
    '3228083638',
    '3084643026',
    '3344292098',
    '3003932025',
    '3014679118',
    '3311742713',
    '3464976339',
    '3054613007',
    '3024532689',
    '3024521407',
    '3124278266',
    '3074924662',
    '3064167286',
    '3016820303',
    '3018027979',
    '3334976627',
    '3074291088',
    '3349817023',
    '3034559362',
    '3078741887',
    '3007950479',
    '3073372270',
    '3214362662',
    '3217213854',
    '3154430395',
    '3008064606',
    '3204463418',
    '3468952322',
    '3088613091',
    '304663245',
    '3094009072',
    '3414787408',
    '3316230667',
    '3498680047',
    '3029366061',
    '3104554077',
    '3494837228',
    '3004967919',
    '3214667035',
    '3064503297',
    '3039239681',
    '3008440326',
    '3014049775',
    '3461463343',
    '3054466398',
    '3124527631',
    '3324064008',
    '3014402662',
    '3004752667',
    '3477538092',
    '3224303457',
    '3334133672',
    '3024336713',
    '3078771570',
    '3213713107',
    '3054084641',
    '3035179805',
    '3228056071',
    '3238857327',
    '3110961961',
    '3008840559',
    '3024123119',
    '3314978498',
    '3349988968',
    '3035258392',
    '3454378008',
    '3488453396',
    '3101431081',
    '3338409402',
    '3490448443',
    '3200785001',
    '3034454594',
    '3084411897',
    '3224622156',
    '3017758735',
    '3228084324',
    '3033931840',
    '3344897252',
    '3466394064',
    '3124423654',
    '3124001658',
    '3074208202',
    '3224616746',
    '3487353039',
    '3334172331',
    '3364192124',
    '3067579607',
    '3316230667',
    '3045009450',
    '3044242642',
    '3498680047',
    '3187800346',
    '3059668481',
    '3230499879',
    '3030268823',
    '3214118333',
    '3122494557',
    '3096756882',
    '3414274472',
    '3244435241',
    '3002754620',
    '3063067842',
    '3334000519',
    '3018181846',
    '3054878060',
    '3045048175',
    '3092750073',
    '3218807564',
    '3488464518',
    '3042730614',
    '3360197723',
    '3324613974',
    '3334387694',
    '3334452678',
    '3224836534',
    '3324834719',
    '3087991462',
    '3248799152',
    '3065242922',
    '3224306051',
    '3045673378',
    '3411268285',
    '3334871643',
    '3334944299',
    '3327154767',
    '3014833238',
    '3405463900',
    '3444134659',
    '3074208202',
    '3224616746',
    '3487353039',
    '3364192124',
    '3067579607',
    '3045009450',
    '3044242642',
    '3187800346',
    '3059668481',
    '3230499879',
    '3030268823',
    '3214118333',
    '3096756882',
    '3063067842',
    '3334000519',
    '3018181846',
    '3054878060',
    '3092750073',
    '3218807564',
    '3488464518',
    '3042730614',
    '3035258392',
    '3454378008',
    '3488453396',
    '3101431081',
    '3490448443',
    '3200785001',
    '3034454594',
    '3084411897',
    '3224622156',
    '3017758735',
    '3228084324',
    '3033931840',
    '3344897252',
    '3466394064',
    '3124423654',
    '3124001658',
    '3357746930',
    '3084771266',
    '3024112166',
    '3234396176',
    '3030409198',
    '3144961974',
    '3204589727',
    '3174881607',
    '3036103749',
    '3344829197',
    '3024625303',
    '3085410391',
    '3084111775',
    '3002779955',
    '3030499226',
    '3011336002',
    '3110459337',
    '3024871167',
    '3028084128',
    '3054055107',
    '3064107332',
    '3414140097',
    '3486630911',
    '3093686183',
    '3430300962',
    '3070454359',
    '3314240788',
    '3095424105',
    '3084425496',
    '3351407826',
    '3064167286',
    '3206574330',
    '3334068119',
    '3024622379',
    '3082774831',
    '3329465740',
    '3160480004',
    '3228083638',
    '3084643026',
    '3344292098',
    '3003932025',
    '3014679118',
    '3464976339',
    '3054613007',
    '3024532689',
    '3024521407',
    '3124278266',
    '3074924662',
    '3018027979',
    '3334976627',
    '3074291088',
    '3349817023',
    '3034559362',
    '3078741887',
    '3007950479',
    '3073372270',
    '3214362662',
    '3217213854',
    '3154430395',
    '3008064606',
    '3204463418',
    '3468952322',
    '3088613091',
    '304663245',
    '3094009072',
    '3414787408',
    '3316230667',
    '3498680047',
    '3029366061',
    '3104554077',
    '3494837228',
    '3004967919',
    '3214667035',
    '3014049775',
    '3054466398',
    '3124527631',
    '3014402662',
    '3004752667',
    '3477538092',
    '3334133672',
    '3024336713',
    '3078771570',
    '3213713107',
    '3035179805',
    '3228056071',
    '3238857327',
    '3110961961',
    '3008840559',
    '3024123119',
    '3314978498',
    '3349988968',
    '3051493356',
    '3493964914',
    '3212794369',
    '302437295',
    '3002664614',
    '3024706576',
    '3441369229',
    '3316842959',
    '3034117696',
    '3035004263',
    '3434054814',
    '3049306406',
    '3079302149',
    '3429894739',
    '3452255330',
    '3074225432',
    '3030076147',
    '3010043969',
    '3204587666',
    '3077559610',
    '3414274472',
    '3334844655',
    '3084942639',
    '3356101100',
    '3477144218',
    '3426309802',
    '3347981626',
    '3333772785',
    '3122907081',
    '3227570010',
  ]
  console.log(
    array.filter(function (item, pos) {
      return a.indexOf(item) == pos
    }).length
  )
  useEffect(() => {
    let pathName = location.pathname
      .replace('client', '')
      .replace('/', '')
      .replace('/', '')
      .replace('-', ' ')
    if (capitalizeFirstLetter(pathName) === 'Doctor bds') {
      setName('Doctor BDS')
    } else if (capitalizeFirstLetter(pathName) === 'Doctor mbs') {
      setName('Doctor MBBS')
    } else {
      setName(capitalizeFirstLetter(pathName))
    }
  }, [location])

  useEffect(() => {
    if (name !== '') {
      setLoadingActive(true)
      fetchTodos()
    }
  }, [name])

  useEffect(() => {
    const sub = client.models.Client.observeQuery({
      limit: 20000,
      filter: {
        category_id: {
          beginsWith: name,
        },
      },
    }).subscribe({
      next: ({ items }) => {
        setCategory([...items])
        setFilterItem([...items])
      },
    })

    return () => sub.unsubscribe()
  }, [name])

  useEffect(() => {
    if (failedRecord + savedRecord === totalRecord) {
      setLoading(false)
    }
  }, [savedRecord, failedRecord])

  useEffect(() => {
    const filteredData = categories.filter((sheet) => {
      return (
        sheet?.name?.toLowerCase().includes(filterText) ||
        sheet?.phone_number
          ?.replace(' ', '')
          ?.toLowerCase()
          .includes(filterText.replace(' ', '')?.toLowerCase()) ||
        sheet?.cnic?.toLowerCase().includes(filterText) ||
        sheet?.address?.toLowerCase().includes(filterText) ||
        sheet?.hospital?.toLowerCase().includes(filterText) ||
        sheet?.Designation?.toLowerCase().includes(filterText)
      )
    })
    setFilterItem(filteredData)
  }, [filterText])

  const editRecord = (record) => {
    setVisible(true)
    setID(record.toID)
    setName(record.name)
  }

  const saveDate = async () => {
    const reader = new FileReader()

    reader.onload = async (event) => {
      const workbook = XLSX.read(event.target.result, { type: 'binary' })
      const sheetName = workbook.SheetNames[0]
      const sheet = workbook.Sheets[sheetName]
      const sheetData = XLSX.utils.sheet_to_json(sheet)
      setTotalRecord(sheetData.length)
      let exists = Object.keys(sheetData[0]).filter(
        (record) => record.replace(' ', '') === 'phone_number',
      )
      if (exists.length === 0) {
        setError('Invalid File Format')
        inputFile.current.value = null
        setFile(null)
        return
      }
      setLoading(true)
      setNumber(true)

      let isSaved = await SaveRecord(sheetData)
      if (isSaved === true) {
        setFile(null)
        inputFile.current.value = null
        setError('')
      }
    }

    reader.readAsBinaryString(file)
  }
  const deleteRow = async (row) => {
    const shouldRemove = confirm('are you sure you want to delete?')
    if (shouldRemove) {
      const toBeDeletedTodo = {
        phone_number: row.phone_number,
      }

      const { data: deletedTodo, error } = await client.models.Client.delete(toBeDeletedTodo)

      // fetchTodos()
    }
  }

  const columns = [
    {
      name: 'ID',
      selector: (row, i) => i + 1,
    },

    {
      name: 'Name',
      selector: (row) => row.name,
    },
    {
      name: 'Phone No',
      selector: (row) => row.phone_number.replace(' ', ''),
    },
    {
      name: 'CNIC',
      selector: (row) => (row.cnic ? row.cnic : 'N.A'),
    },
    {
      name: 'Address',
      selector: (row) => (row.address ? row.address : 'N.A'),
    },
    {
      name: 'Designation',
      selector: (row) => (row.designation ? row.designation : 'N.A'),
    },

    {
      name: 'Action',
      selector: (row) => {
        return (
          <>
            <NavLink to={{ pathname: '/edit/client' }} state={JSON.stringify(row)}>
              Edit
            </NavLink>{' '}
            <span style={{ color: 'black' }}>|</span>
            <a
              onClick={() => deleteRow(row)}
              style={{ color: 'red', marginLeft: 5, cursor: 'pointer' }}
            >
              Delete
            </a>
          </>
        )
      },
    },
  ]

  const deleteAll = async (records) => {
    records.forEach(async (item) => {
      // if (item.phone_number.length === 12) {
      const toBeDeletedTodo = {
        phone_number: item.phone_number,
      }

      const { data: deletedTodo, error } = await client.models.Client.delete(toBeDeletedTodo)
      // }
    })
  }

  const getNumber = (phone_number) => {
    if (phone_number === undefined) {
      return 0
    }
    var regex = /(9|04)\d{8}/g

    if (regex.test(phone_number) === true) {
      return `+${phone_number}`
    }
    console.log(phone_number.toString()[0])
    if (phone_number.toString()[0] == '0' || phone_number.toString()[0] === 0) {
      let numberStr = phone_number.toString()

      const res = numberStr.replace(numberStr[0], '')

      return `+92${res}`
    }
    if (phone_number.toString()[0] === '3') {
      return `+92${phone_number}`
    } else {
      return 0
    }
  }

  const SaveRecord = async (records) => {
    var failed = 0
    var incomplete_digit = []
    var wrong_digit = []
    var save_digit = []
    var failed_digit = []
    var saved = 0
    records.forEach(async (item) => {
      let no = item?.phone_number?.toString().replace(' ', '').replace('-', '')
      if (no !== undefined && no !== '' && no !== null) {
        let phone_number = getNumber(
          item?.phone_number?.toString().replace(' ', '').replace('-', ''),
        )

        if (phone_number.length < 13) {
          failed++
          incomplete_digit.push(phone_number)
          // wrong_digit.push(item?.phone_number?.toString().replace(' ', '').replace('-', ''))
          return
        }

        const { errors, data: newTodo } = await client.models.Client.create({
          category_id: name,
          name: item.name ? item.name : 'No Name',
          designation: item.designation ? item.designation : '',
          cnic: item.cnic ? item.cnic : '',
          hospital: item.hospital ? item.hospital : '',
          address: item.address ? item.address : '',
          phone_number: phone_number,
        })
        if (newTodo !== null) {
          saved++
          save_digit.push(item.phone_number)
          setSavedReocrd(saved)
        } else {
          failed++

          failed_digit.push(item.phone_number)
          setFailedRecord(failed)
          setFailedRecords([failed_digit])
        }
      } else {
        failed++
        setFailedRecord(failed)
        wrong_digit.push(item.phone_number)
      }
    })

    console.log(incomplete_digit, 'incomplete_digit')
    console.log(wrong_digit, 'wrong_digit')
    console.log(save_digit, 'save_digit')
    console.log(failed_digit, 'failed_digit')

    return true
  }

  console.log(failedRecords, 'failed_digit')

  const createForm = () => {
    return (
      <CCard className="mb-4" style={{ width: '60%', margin: '0 auto' }}>
        <CCardHeader>
          <strong>Import Data</strong>{' '}
          <CButton
            color="primary"
            style={{ float: 'right' }}
            onClick={() => {
              setVisible(false)
              setNumber(false)
              setTotalRecord(0)
              setSavedReocrd(0)
              setFailedRecord(0)
            }}
          >
            Close Model
          </CButton>
        </CCardHeader>

        <CForm>
          <div className="m-3">
            {showNumber === true ? (
              <p>
                <span>
                  <strong>Total Record</strong>: {totalRecord}
                </span>{' '}
                <br />
                <span>
                  <strong>Total Saved Record</strong>: {savedRecord}
                </span>
                <br />
                <span>
                  <strong>Total Record Failed</strong>: {failedRecord}
                </span>
              </p>
            ) : (
              ''
            )}

            <CFormLabel htmlFor="exampleFormControlInput1">File</CFormLabel>
            <CFormInput
              type="file"
              id="exampleFormControlInput1"
              name="file"
              ref={inputFile}
              onChange={(e) => setFile(e.target.files[0])}
              placeholder="Add File"
            />
            <p style={{ color: 'red' }}>{error}</p>
            <div className="d-grid gap-2 col-6 mx-auto">
              <CButton color="primary" style={{ marginTop: '4%' }} onClick={() => saveDate()}>
                {loading === true ? 'Saving Data ...' : 'Import Data'}
              </CButton>
            </div>
          </div>
        </CForm>
      </CCard>
    )
  }
  function convertArrayOfObjectsToCSV(array) {
    let result

    const columnDelimiter = ','
    const lineDelimiter = '\n'
    const keys = Object.keys(categories[0])
    result = ''
    result += keys.join(columnDelimiter)
    result += lineDelimiter

    array.forEach((item) => {
      let ctr = 0
      keys.forEach((key) => {
        if (key !== 'category') {
          if (ctr > 0) result += columnDelimiter

          result += item[key]

          ctr++
        }
      })
      result += lineDelimiter
    })

    return result
  }
  function downloadCSV(array) {
    const link = document.createElement('a')
    let csv = convertArrayOfObjectsToCSV(array)
    if (csv == null) return

    const filename = 'export.csv'

    if (!csv.match(/^data:text\/csv/i)) {
      csv = `data:text/csv;charset=utf-8,${csv}`
    }

    link.setAttribute('href', encodeURI(csv))
    link.setAttribute('download', filename)
    link.click()
  }
  const Export = ({ onExport }) => (
    <CButton color="primary" onClick={(e) => onExport(e.target.value)}>
      Export
    </CButton>
  )

  return (
    <CRow>
      <CCol xs={12}>
        {visible == true ? createForm() : null}
        <CCard className="mb-4">
          <CCardHeader>
            <strong>{name} Contact List</strong>{' '}
            <CButton
              color="primary"
              style={{ float: 'right' }}
              onClick={() => {
                setVisible(!visible)
              }}
            >
              Import Data
            </CButton>
          </CCardHeader>
          <CCardBody>
            <div className="overflow-x-auto">
              <CFormInput
                id="search"
                type="text"
                placeholder="Filter Table"
                aria-label="Search Input"
                style={{ marginBottom: 10 }}
                value={filterText}
                onChange={(e) => setFilterText(e.target.value)}
              />
              {categories.length > 0 ? (
                <DataTable
                  columns={columns}
                  data={filteredItems}
                  progressPending={loadingTable}
                  pagination
                  actions={<Export onExport={() => downloadCSV(categories)} />}
                  paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1
                />
              ) : (
                <DataTable
                  columns={columns}
                  data={filteredItems}
                  progressPending={loadingTable}
                  pagination
                  // actions={actionsMemo}
                />
              )}
            </div>
          </CCardBody>
        </CCard>
      </CCol>
    </CRow>
  )
}

export default DoctorDBS
